フレームワーク課題

「Struts」
Strutsは、The Apache Software Fundationが2000年から開発しているオープンソースのソフトウェア。
「Apache Software License 2.0」というライセンスに基づいて公開されている。
MVCモデル採用のフレームワークであり、画面の変更であれば、Viewである画面（JSP）の
修正だけで済むという開発効率向上のメリットがある。
また、コードは後述しますが、Strutsには独自のタグライブラリが用意されているので、
画面（JSP）の記述レベルを統一できると同時に、可読性の低下を防止することが可能で、
より品質の高いWebアプリケーションを構築できる。
前回説明したように、JSPでは「<%=」「%>」で囲まれるコード、
例えば「<%= new java.util.Date() %>」の部分のようなJava言語のコードを埋め込む必要
がある場合もあるが、
Strutsでは独自のタグライブラリによりJava言語のコードを混在させる必要がない。
チームでWebアプリケーションを設計すると、個々のエンジニアの設計手法や、
考えが違うため、実装方法に多少の差異があるWebアプリケーションが構築されて
しまいがちだが、Strutsでは上記のメリットがあるため、
その問題を解消することが可能。
しかし、Strutsは広く使われ過ぎたためか、「XMLの設定ファイルが多い！」
「脆弱（ぜいじゃく）性があるぞ！」などの議論の対象になることも多く、
独自拡張したり前述のプラグインや拡張フレームワーク、
ライブラリを使うなどして問題に対処している開発プロジェクトも多い。

「JSF」
Javaの開発元であるOracle社が開発・提供しているもので、
その仕様はJava EE(Java Platform, Enterprise Edition)の一部として取り込まれている。
Webサーバでデータの管理や処理を行い、
Webクライアント(Webブラウザなど)で表示・入力・操作を行うWebアプリケーションを
構築するための諸機能を提供する。
様々なコンポーネント(ソフトウェア部品)を組み合わせてWebサーバの提供する機能や
データと連動・連携するWebページを動的に生成することができる。
基本的な機能として、アプリケーションの状態の管理やイベント処理、
入力値の検証(バリデーション)、Webページ上のの表示・入力領域とサーバ上のデータとの対応付け(バインディング)、
多言語対応、HTMLを利用した基本的なユーザインターフェース要素などが提供される。
サーバ上でのWebページ生成には当初はJSP(JavaServer Pages)が用いられてきたが、
JSF 2.0からはFaceletsと呼ばれるテンプレートエンジンが採用されている。

「Spring Framework」
DI(Dipendency Injection：依存性注入)を用いたプログラミングを容易にする機能が
メインのため、DIコンテナの一つとも言われる。
2002年10月にRod Johnson氏が発表したもので、オープソースソフトウェアとして
Apache Licenseの元で公開されている。JavaEEを用いてWebアプリケーションを構築する際
の基盤の一つとして注目されている。
Spring Frameworkには多くのフレームワークの集合体で、DIを実現する機能の他にも、
AOP(Aspect Oriented Programming：アスペクト指向プログラミング)
を容易にするためのフレームワークや、データアクセスのためのフレームワーク、
トランザクション処理のためのフレームワーク、
MVC(Model-View-Controller)アーキテクチャのためのフレームワークなどが提供されている。
  

 

